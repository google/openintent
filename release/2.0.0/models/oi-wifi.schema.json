{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Wi-fi presentation schema",
  "title": "oi_wifi",
  "$id": "oi_wifi",
  "type": "object",
  "required": [
    "accesspoints",
    "accesspoint_version",
    "floorplans",
    "floorplan_version"
  ],
  "properties": {
    "accesspoints": {
      "type": "array",
      "description": "An array of access_points",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/accesspoint"
      }
    },
    "switches": {
      "type": "array",
      "description": "An array of network switches",
      "items": {
        "$ref": "#/definitions/switch"
      }
    },
    "floorplans": {
      "type": "array",
      "description": "An array of floorplans",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/floorplan"
      }
    },
    "floorplan_version": {
      "description": "Version of the openintent-floorplan model",
      "type": "string"
    },
    "wall_materials": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/material"
      }
    },
    "area_materials": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/material"
      }
    },
    "openintent_version": {
      "description": "Version of the openintent-wifi model",
      "type": "string"
    }
  },
  "definitions": {
    "accesspoint": {
      "type": "object",
      "description": "Representation of an access-point",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of access point."
        },
        "floorplan_name": {
          "type": "string",
          "description": "Name of floorplan to which this access-point belongs."
        },
        "building_name": {
          "type": "string",
          "description": "Name of the building with which to look for floorplan_name"
        },
        "asset_tag": {
          "type": "string",
          "description": "Assigned asset tag"
        },
        "serial_number": {
          "type": "string",
          "description": "Serial number of this access point."
        },
        "claim_code": {
          "type": "string",
          "description": "Vendor registration or claim code."
        },
        "mac_address": {
          "type": "string",
          "description": "MAC Address of an access_point. Should be described in the format: 01:23:45:67:89:0a where is is 2 characters seperated by colons and letters are lower case.\n",
          "pattern": "^([a-f0-9]{2}:){5}[a-f0-9]{2}$"
        },
        "manufacturer": {
          "type": "string",
          "description": "The manufacturer name for this access point.\n"
        },
        "model": {
          "type": "string",
          "description": "The model number of this particular access point"
        },
        "sku": {
          "type": "string",
          "description": "SKU part number for this specific access-point."
        },
        "connected_switch": {
          "type": "object",
          "description": "Information about the switch this access point is connected to",
          "properties": {
            "switch_name": {
              "type": "string",
              "description": "Reference to the name of the switch this access point is connected to"
            },
            "port": {
              "type": "string",
              "description": "The port on the switch that this access point is connected to"
            },
            "vlan": {
              "type": "integer",
              "description": "VLAN ID assigned to this access point connection"
            },
            "closet_name": {
              "type": "string",
              "description": "Name or identifier of the closet where the connected switch is located"
            },
            "switch_id": {
              "type": "string",
              "description": "vendor id of the switch which this access point is connected."
            }
          }
        },
        "dot11_radios": {
          "type": "array",
          "minItems": 1,
          "description": "Array of dot11_radio elements.",
          "items": {
            "$ref": "#/definitions/dot11_radio"
          }
        },
        "ssids": {
          "type": "array",
          "description": "List of SSIDs available on this access-point",
          "items": {
            "type": "string"
          }
        },
        "antennas": {
          "type": "array",
          "description": "Array of antennas connected to this access-point.",
          "items": {
            "$ref": "#/definitions/antenna"
          }
        },
        "rf_connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rf_connector"
          }
        },
        "reference_markers": {
          "type": "array",
          "description": "List of reference markers",
          "items": {
            "$ref": "#/definitions/reference_marker"
          }
        },
        "regulatory_domain": {
          "type": "string"
        },
        "ethernet_ports": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orientation": {
          "description": "If there are no antennas defined, or the antennas are integrated, the orientation for access-point should be used.",
          "$ref": "#/definitions/orientation"
        },
        "coordinates": {
          "description": "Array of coordinate objects which contain both xyz and lat_long coordinate systems. This allows all objects to share multi-coordinate systems.\n",
          "type": "array",
          "items": {
            "$ref": "#/definitions/coordinate"
          }
        },
        "display_color": {
          "type": "string",
          "description": "Hex color code for visualizing access points. Has no inherent intent, but for visualization purposes. Should start with \"#\" to indicate a hex color value. Example '#AC7400'",
          "pattern": "^#[0-9A-Fa-f]{6}$"
        }
      }
    },
    "switch": {
      "type": "object",
      "description": "Representation of a network switch",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of switch."
        },
        "floorplan_name": {
          "type": "string",
          "description": "Name of floorplan to which this switch belongs."
        },
        "building_name": {
          "type": "string",
          "description": "Name of the building with which to look for floorplan_name"
        },
        "asset_tag": {
          "type": "string",
          "description": "Assigned asset tag"
        },
        "serial_number": {
          "type": "string",
          "description": "Serial number of this switch."
        },
        "manufacturer": {
          "type": "string",
          "description": "The manufacturer name for this switch."
        },
        "model": {
          "type": "string",
          "description": "The model number of this particular switch"
        },
        "sku": {
          "type": "string",
          "description": "SKU part number for this specific switch."
        },
        "ip_address": {
          "type": "string",
          "description": "Management IP address of the switch",
          "format": "ipv4"
        },
        "closet_name": {
          "type": "string",
          "description": "Name or identifier of the closet (Intermediate Distribution Frame) room/closet where this switch is located"
        },
        "coordinates": {
          "description": "Array of coordinate objects which contain both xyz and lat_long coordinate systems.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/coordinate"
          }
        },
        "display_color": {
          "type": "string",
          "description": "Hex color code for visualizing the switch. Has no inherent intent, but for visualization purposes.",
          "pattern": "^#[0-9A-Fa-f]{6}$"
        },
        "vendor_id": {
          "type": "string",
          "description": "Unique idenfier of the switch.\n"
        },
        "copper_port_count": {
          "type": "number",
          "description": "number of RJ-45 copper ports."
        },
        "modular_port_count": {
          "type": "number",
          "description": "number of modular ports (SFP/SFP+/SFP28/QSFP)"
        },
        "poe_budget": {
          "type": "number",
          "description": "total available power in watts."
        },
        "rack_units": {
          "type": "number",
          "description": "number of rack units (RU) required for the device."
        }
      }
    },
    "floorplan": {
      "type": "object",
      "required": [
        "name",
        "dimensions"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of floorplan (must be unique in the openintent payload.)"
        },
        "vendor_id": {
          "type": "string",
          "description": "Vendor's ID for this floorplan"
        },
        "map_uri": {
          "type": "string",
          "description": "URI where to retrieve the map. Not all URIs will be resolvable by all systems.",
          "format": "uri"
        },
        "project_name": {
          "type": "string",
          "description": "Name of the project/file"
        },
        "floor_id": {
          "type": "string",
          "description": "String representation of the floor id (Example: Ground, 1st, 3, etc)\n"
        },
        "rotation": {
          "type": "number",
          "description": "Rotation of the floorplan from native orientation"
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions of the floorplan",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/dimension"
          }
        },
        "wall_segments": {
          "type": "array",
          "description": "Segments of wall on floorplan",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/wall_segment"
          }
        },
        "reference_markers": {
          "type": "array",
          "description": "List of reference markers",
          "items": {
            "$ref": "#/definitions/reference_marker"
          }
        },
        "attenuation_areas": {
          "type": "array",
          "description": "List of areas on the floorplan",
          "items": {
            "$ref": "#/definitions/attenuation_area"
          }
        },
        "coverage_areas": {
          "type": "array",
          "description": "List of coverage areas on the floorplan",
          "items": {
            "$ref": "#/definitions/coverage_area"
          }
        },
        "holes_in_floor": {
          "type": "array",
          "description": "List of areas on the floorplan",
          "items": {
            "$ref": "#/definitions/hole_in_floor"
          }
        },
        "closets": {
          "type": "array",
          "description": "array of closet objects.",
          "items": {
            "$ref": "#/definitions/closet"
          }
        }
      }
    },
    "closet": {
      "type": "object",
      "description": "Representation of an equipment closet (IDF/MDF)",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of closet"
        },
        "vendor_id": {
          "type": "string",
          "description": "Vendor ID for the closet"
        },
        "type": {
          "enum": [
            "IDF",
            "MDF",
            "OTHER"
          ]
        },
        "coordinates": {
          "description": "Array of coordinate objects which contain both xyz and lat_long coordinate systems. This allows all objects to share multi-coordinate systems.\n",
          "type": "array",
          "items": {
            "$ref": "#/definitions/coordinate"
          }
        }
      }
    },
    "dot11_radio": {
      "type": "object",
      "description": "A dot11 radio object",
      "required": [
        "id",
        "radio_function"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Radio id if one is known"
        },
        "radio_function": {
          "type": "string",
          "enum": [
            "CLIENT_ACCESS",
            "MONITORING",
            "BACKHAUL",
            "DISABLED"
          ]
        },
        "band": {
          "$ref": "#/definitions/frequency_bands"
        },
        "channel": {
          "type": "integer",
          "description": "Channel is the primary 20MHZ channel\n"
        },
        "channel_width": {
          "$ref": "#/definitions/channel_width"
        },
        "channel_assignment": {
          "description": "This defines if radios channels are manually assigned (human) or dynamically assigned by tooling.\n",
          "type": "string",
          "enum": [
            "AUTOMATIC",
            "MANUAL"
          ]
        },
        "secondary_channel": {
          "type": "integer",
          "description": "Secondary channel based on 802.11ac notation (center channel). Used with 80+80 and 160+160 channel width configurations to describe the secondary channel (not containing primary channel).\n"
        },
        "transmit_power": {
          "type": "integer",
          "description": "Conducted, per-chain power."
        },
        "transmit_eirp": {
          "type": "number",
          "description": "EIRP, requires antenna gain to calculate"
        },
        "mimo_chains": {
          "type": "integer",
          "description": "Number of radio chains this radio is operating with\n"
        }
      }
    },
    "antenna": {
      "type": "object",
      "required": [
        "vendor",
        "model"
      ],
      "properties": {
        "vendor": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "leads": {
          "type": "integer",
          "description": "The number of leads an antenna has.\n"
        },
        "extention": {
          "type": "object",
          "properties": {
            "is_extended": {
              "description": "Is the antenna extended with a rf extention cable?\n",
              "type": "boolean"
            },
            "vendor": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "unit_length": {
              "description": "Unit for describing the length of the extension\n",
              "type": "string",
              "enum": [
                "feet",
                "meters"
              ]
            },
            "length": {
              "description": "Length of the extension in the unit_length\n",
              "type": "number"
            },
            "losses": {
              "description": "Array of losses per frequency band.\n",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "loss": {
                    "type": "number",
                    "description": "Loss in dB/100m\n"
                  },
                  "frequency": {
                    "$ref": "#/definitions/frequency_bands"
                  }
                }
              }
            }
          }
        },
        "antenna_type": {
          "type": "string",
          "description": "Indicates if the antenna is classified as an omnidirectional or a directional antenna.\n",
          "enum": [
            "OMNIDIRECTIONAL",
            "DIRECTIONAL"
          ]
        },
        "bands": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "band": {
                "$ref": "#/definitions/frequency_bands"
              },
              "gain": {
                "type": "number",
                "description": "Gain in dBi"
              }
            }
          }
        },
        "rf_connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rf_connector"
          }
        },
        "orientation": {
          "$ref": "#/definitions/orientation"
        },
        "coordinate": {
          "$ref": "#/definitions/coordinate"
        }
      }
    },
    "rf_connector": {
      "type": "object",
      "description": "Details about RF connectors that would be present on an antenna or Accesspoint.\n",
      "properties": {
        "connector_type": {
          "type": "string",
          "enum": [
            "RP_SMA",
            "RP_TNC",
            "SMA",
            "TNC",
            "Type-N"
          ]
        },
        "gender": {
          "type": "string",
          "description": "Describes the gender of the RF connector\n",
          "enum": [
            "CONNECTOR_MALE",
            "CONNECTOR_FEMALE"
          ]
        },
        "frequency_bands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/frequency_bands"
          }
        }
      }
    },
    "channel_width": {
      "type": "string",
      "description": "Represents channel width configurations as a string\n",
      "enum": [
        "20_MHz",
        "40_MHz",
        "80_MHz",
        "160_MHz",
        "320_MHz",
        "80+80_MHz",
        "160+160_MHz"
      ]
    },
    "coordinate_xyz": {
      "type": "object",
      "description": "A coordinate that references cartesian coordinates using x,y,z\n",
      "required": [
        "x",
        "y",
        "unit"
      ],
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate in X dimension represented as a number",
          "minimum": 0
        },
        "y": {
          "type": "number",
          "description": "Coordinate in Y dimension represented as a number",
          "minimum": 0
        },
        "z": {
          "type": "number",
          "description": "Coordinate in Z dimension as height from floor represented as a number\n"
        },
        "unit": {
          "type": "string",
          "enum": [
            "feet",
            "pixels",
            "meters"
          ]
        }
      }
    },
    "coordinate_lat_long": {
      "type": "object",
      "description": "A coordinate that references geospatial coordinates using using lat/long and altitude\n",
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "type": "number",
          "description": "Latitude expressed as ISO 6709 in degrees",
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "description": "Longitude expressed as ISO 6709 in degrees",
          "minimum": -180,
          "maximum": 180
        },
        "elevation": {
          "type": "number",
          "description": "Height in meters above sea level"
        }
      }
    },
    "coordinate": {
      "type": "object",
      "description": "A coordinate with both sets of x/y/z and lat/long",
      "properties": {
        "coordinate_xyz": {
          "$ref": "#/definitions/coordinate_xyz"
        },
        "coordinate_lat_long": {
          "$ref": "#/definitions/coordinate_lat_long"
        }
      }
    },
    "frequency_bands": {
      "type": "string",
      "description": "Bands that an antenna or radio operates in.",
      "enum": [
        "FREQ_2.4GHZ",
        "FREQ_5GHZ",
        "FREQ_6GHZ"
      ]
    },
    "orientation": {
      "type": "object",
      "description": "Object that describes the orientation of an object. All descriptions can be referenced as a plane in flight.\n",
      "properties": {
        "rotation": {
          "type": "number",
          "description": "Describes the rotation of the device in degrees where 0 is up on the floorplan orientation. For omnidirectional APs, if looking at the AP on the ceiling, the direction points toward the top of the vendor logo. For directional antennas/APs, the peak beamwidth should point in this direction. AKA yaw.\n"
        },
        "tilt": {
          "type": "number",
          "description": "Describes the tilt of the device in degrees. For integrated antenna APs or omnidirectional antenna, 0 describes the default orientation. For directional APs, 0 describes the antenna as pointed horizontal, with positive values tilting up, and negative values pointing down. AKA pitch.\n"
        },
        "roll": {
          "type": "number",
          "description": "Describes the rotation of the device in axis of rotation/tilt. 0 describes the devices default orientation. This will normally be zero in most scenarios. Would be used to rotate and antenna from vertical to horizontal polarization. AKA roll.\n"
        }
      }
    },
    "dimension": {
      "type": "object",
      "description": "Dimension of a floorplan where the origin is located in the lower left corner, making all references to location positive values\n",
      "required": [
        "length",
        "width",
        "unit"
      ],
      "properties": {
        "length": {
          "type": "number",
          "description": "y-dimension of the floorplan",
          "minimum": 0
        },
        "width": {
          "type": "number",
          "description": "x-dimension of the floorplan",
          "minimum": 0
        },
        "height": {
          "type": "number",
          "description": "z-dimension of the floor (default height)",
          "minimum": 0
        },
        "unit": {
          "type": "string",
          "description": "The dimension unit for length, width, height.",
          "enum": [
            "pixels",
            "meters",
            "feet"
          ]
        }
      }
    },
    "wall_segment": {
      "type": "object",
      "description": "Represents a line segment of a wall on a floorplan. Each segment requires a start, and end and a description for the wall type.\n",
      "required": [
        "wall_type",
        "start_point",
        "end_point"
      ],
      "properties": {
        "wall_type": {
          "type": "string",
          "description": "Name of wall type. Can be standalone or match a wall_material defined in main oi-wifi Preference is to define a wall type instead of specifying each value for each wall type.\n"
        },
        "start_point": {
          "$ref": "#/definitions/wall_point",
          "description": "Starting point of the segment"
        },
        "end_point": {
          "$ref": "#/definitions/wall_point",
          "description": "Ending point of the segment"
        },
        "display_color": {
          "type": "string",
          "description": "Used if wall_material is not defined. Hex color code for visualizing access points. Has no inherent intent, but for visualization purposes. Should start with \"#\" to indicate a hex color value. Example '#AC7400'\n",
          "pattern": "^#[0-9A-Fa-f]{6}$"
        },
        "thickness": {
          "type": "number",
          "description": "Used if wall_material is not defined. Thickness in meters of the wall.",
          "minimum": 0
        },
        "height": {
          "type": "number",
          "description": "Used if wall_material is not defined. Height of the top of the wall from the floor.",
          "minimum": 0
        },
        "bottom_height": {
          "type": "number",
          "description": "Used if wall_material is not defined. If wall does not start at floor, define at what height from floor",
          "minimum": 0
        }
      }
    },
    "wall_point": {
      "type": "object",
      "required": [
        "x",
        "y"
      ],
      "description": "Two-dimensional coordinate of a wall point",
      "properties": {
        "x": {
          "type": "number",
          "description": "x-coordinate of the point"
        },
        "y": {
          "type": "number",
          "description": "y-coordinate of the point"
        }
      }
    },
    "reference_marker": {
      "type": "object",
      "description": "A reference marker to denote a location on the floorplan. Can be used to provide notes, or a translation between coordinate systems.\n",
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of the reference marker."
        },
        "coordinate": {
          "$ref": "#/definitions/coordinate"
        },
        "reference_text": {
          "type": "string",
          "description": "Text string from reference"
        }
      }
    },
    "material": {
      "type": "object",
      "description": "Object that defines the properties of wall material",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for wall material"
        },
        "itu_material_type": {
          "type": "string",
          "description": "ITU Wall Material if known"
        },
        "rf_properties": {
          "$ref": "#/definitions/rf_properties"
        },
        "thickness_m": {
          "type": "number",
          "description": "Thickness of the wall in meters. Do not fake wall thickness with arbitrary formulas. If wall thickness is not defined, omit and use flat attenuation values.\n",
          "minimum": 0
        },
        "bottom_height": {
          "type": "number",
          "description": "For walls, if the wall does not start at the floor, this allows you to specify the height the bottom of the wall is at.\n",
          "minimum": 0
        },
        "top_height": {
          "type": "number",
          "description": "For walls, the top_height is the height in meters of the top of the wall.\n",
          "minimum": 0
        },
        "display_color": {
          "type": "string",
          "description": "Used if wall_material is not defined. Hex color code for visualizing access points. Has no inherent intent, but for visualization purposes. Should start with \"#\" to indicate a hex color value. Example '#AC7400'\n",
          "pattern": "^#[0-9A-Fa-f]{6}$"
        }
      }
    },
    "rf_properties": {
      "type": "object",
      "properties": {
        "attenuation_flat": {
          "type": "number",
          "description": "Flat attenuation value. Object attenuates this value dB regardless of thickness.\n"
        },
        "attenuation_per_m": {
          "type": "number",
          "description": "Attenuation in dB per meter of thickness. Should multiply by thickness to calculate flat attenuation\n"
        }
      }
    },
    "area": {
      "type": "object",
      "description": "An area is defined as a polygon with a list of coordinates. These coordinates must be colinear in order and the first and last must be colinear with each other.\n",
      "required": [
        "coordinates"
      ],
      "properties": {
        "coordinates": {
          "type": "array",
          "minItems": 3,
          "items": {
            "$ref": "#/definitions/coordinate"
          }
        }
      }
    },
    "attenuation_area": {
      "type": "object",
      "required": [
        "area",
        "area_material"
      ],
      "properties": {
        "area": {
          "$ref": "#/definitions/area"
        },
        "area_material": {
          "$ref": "#/definitions/material"
        }
      }
    },
    "coverage_area": {
      "type": "object",
      "required": [
        "area"
      ],
      "description": "Area included/excluded for wifi coverage",
      "properties": {
        "area": {
          "$ref": "#/definitions/area"
        },
        "exclusion": {
          "description": "For exclusion areas, the flag would be true.\n",
          "type": "boolean"
        }
      }
    },
    "hole_in_floor": {
      "type": "object",
      "required": [
        "area"
      ],
      "properties": {
        "area": {
          "$ref": "#/definitions/area"
        },
        "inverted": {
          "description": "Inverted hole-in-floor objects are used to describe a hole that is everywhere but the defined area. Example would be If you wanted to show a building, but wanted a hole in floor for to indicate that exterior to the building was a hole. When not present, assumption is the value is false.\n",
          "type": "boolean"
        }
      }
    }
  }
}
